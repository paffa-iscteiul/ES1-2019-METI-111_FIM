package Projeto_METI_111_FIM.Projeto_METI_111_FIM;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

import java.io.IOException;
import java.util.ArrayList;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class ResultDisplayTest {

	ResultDisplay rd1, rd2;
	ArrayList <Regra> regras = new ArrayList<Regra>() ;
	ArrayList <Record> records = new ArrayList<Record>() ;
	
	@BeforeEach
	public void setUp() throws Exception {
		regras = new ArrayList<Regra>() ;
		records = new ArrayList<Record>() ;
		Regra r1 = new Regra("LOC < 10","is_long_method = TRUE","is_long_method = FALSE");
		Regra r2 = new Regra("LOC > 10","is_long_method = FALSE","is_long_method = TRUE");
		regras.add(r1);
		//regras.add(r2);
		Record r = new Record();
		r.add(1, "1.0");
		r.add(2, "fat");
		r.add(3, "DocumentParseFixture");
		r.add(4, "Output()");
		r.add(5, "3.0");
		r.add(6, "1.0");
		r.add(7, "0.0");
		r.add(8, "1.0");
		r.add(9, "FALSE");
		r.add(10, "FALSE");
		r.add(11, "FALSE");
		r.add(12, "FALSE");
		Record rr1 = new Record();
		rr1.add(1, "2.0");
		rr1.add(2, "fat");
		rr1.add(3, "DocumentParseFixture");
		rr1.add(4, "Structure()");
		rr1.add(5, "3.0");
		rr1.add(6, "1.0");
		rr1.add(7, "0.0");
		rr1.add(8, "1.0");
		rr1.add(9, "FALSE");
		rr1.add(10, "FALSE");
		rr1.add(11, "FALSE");
		rr1.add(12, "FALSE");
		records.add(r);
		records.add(rr1);
		rd1 = new ResultDisplay("Nome", regras, records);
	}

	@Test
	public void testResultDisplayStringArrayListOfRegraArrayListOfRecordString() throws IOException {
		String s = System.getProperty("user.dir");
		String a = s + "\\files\\Long-Method.xlsl";
		rd2 = new ResultDisplay(a, regras, records,"IF( LOC < 10 ) THEN ( is_long_method = TRUE ) ELSE ( is_long_method = FALSE )");
		assertEquals(rd2.getValue(),"TRUE");
		ArrayList <Regra> regras5 = new ArrayList<Regra>() ;
		Regra r5 = new Regra("LOC > 10","is_long_method = FALSE","is_long_method = TRUE");
		regras5.add(r5);
		ResultDisplay rd5 = new ResultDisplay(a, regras5, records,"IF( LOC > 10 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd5.getValue(),"TRUE");		
		ArrayList <Regra> regras6 = new ArrayList<Regra>() ;
		Regra r6 = new Regra("CYCLO > 10","is_long_method = FALSE","is_long_method = TRUE");
		regras6.add(r6);
		ResultDisplay rd6 = new ResultDisplay(a, regras6, records,"IF( CYCLO > 10 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd6.getValue(),"TRUE");		
		ArrayList <Regra> regras7 = new ArrayList<Regra>() ;
		Regra r7 = new Regra("LOC > 10 AND LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras7.add(r7);
		ResultDisplay rd7 = new ResultDisplay(a, regras7, records,"IF( LOC > 10 AND LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd7.getValue(),"TRUE");
		assertNotEquals(rd7.getValue(), "FALSE");
		ArrayList <Regra> regras8 = new ArrayList<Regra>() ;
		Regra r8 = new Regra("CYCLO < 10","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras8.add(r8);
		ResultDisplay rd8 = new ResultDisplay(a, regras8, records,"IF( CYCLO < 10 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd8.getValue(),"TRUE");
		ArrayList <Regra> regras9 = new ArrayList<Regra>() ;
		Regra r9 = new Regra("LAA < 5","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras9.add(r9);
		ResultDisplay rd9 = new ResultDisplay(a, regras9, records,"IF( LAA < 5 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd9.getValue(),"TRUE");
		ArrayList <Regra> regras10 = new ArrayList<Regra>() ;
		Regra r10 = new Regra("LAA > 5","is_long_method = FALSE","is_long_method = TRUE");
		regras10.add(r10);
		ResultDisplay rd10 = new ResultDisplay(a, regras10, records,"IF( LAA > 5 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd10.getValue(),"TRUE");
		ArrayList <Regra> regras11 = new ArrayList<Regra>() ;
		Regra r11 = new Regra("LAA > 5 AND LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras11.add(r11);
		ResultDisplay rd11 = new ResultDisplay(a, regras11, records,"IF( LAA > 5 AND LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd11.getValue(),"TRUE");
		ArrayList <Regra> regras12 = new ArrayList<Regra>() ;
		Regra r12 = new Regra("LAA > 5 AND CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras12.add(r12);
		ResultDisplay rd12 = new ResultDisplay(a, regras12, records,"IF( LAA > 5 AND CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd12.getValue(),"TRUE");
		ArrayList <Regra> regras13 = new ArrayList<Regra>() ;
		Regra r13 = new Regra("LAA > 5 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras12.add(r13);
		ResultDisplay rd13 = new ResultDisplay(a, regras13, records,"IF( LAA > 5 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd13.getValue(),"FALSE");
		ArrayList <Regra> regras14 = new ArrayList<Regra>() ;
		Regra r14 = new Regra("LAA > 5 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras14.add(r14);
		ResultDisplay rd14 = new ResultDisplay(a, regras14, records,"IF( LAA > 5 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd14.getValue(),"FALSE");
		ArrayList <Regra> regras15 = new ArrayList<Regra>() ;
		Regra r15 = new Regra("CYCLO > 5 AND LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras15.add(r15);
		ResultDisplay rd15 = new ResultDisplay(a, regras15, records,"IF( CYCLO > 5 AND LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd15.getValue(),"TRUE");
		ArrayList <Regra> regras16 = new ArrayList<Regra>() ;
		Regra r16 = new Regra("CYCLO > 5 AND CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras16.add(r16);
		ResultDisplay rd16 = new ResultDisplay(a, regras16, records,"IF( CYCLO > 5 AND CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd16.getValue(),"TRUE");
		ArrayList <Regra> regras17 = new ArrayList<Regra>() ;
		Regra r17 = new Regra("CYCLO > 5 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras17.add(r17);
		ResultDisplay rd17 = new ResultDisplay(a, regras17, records,"IF( CYCLO > 5 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd17.getValue(),"FALSE");
		ArrayList <Regra> regras18 = new ArrayList<Regra>() ;
		Regra r18 = new Regra("CYCLO > 5 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras18.add(r18);
		ResultDisplay rd18 = new ResultDisplay(a, regras18, records,"IF( CYCLO > 5 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd18.getValue(),"FALSE");
		ArrayList <Regra> regras19 = new ArrayList<Regra>() ;
		Regra r19 = new Regra("CYCLO < 5 AND LOC < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras19.add(r19);
		ResultDisplay rd19 = new ResultDisplay(a, regras19, records,"IF( CYCLO < 5 AND LOC < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd19.getValue(),"FALSE");
		ArrayList <Regra> regras20 = new ArrayList<Regra>() ;
		Regra r20 = new Regra("ATFD < 5 AND LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras20.add(r20);
		ResultDisplay rd20 = new ResultDisplay(a, regras20, records,"IF( ATFD < 5 AND LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd20.getValue(),"TRUE");
		ArrayList <Regra> regras21 = new ArrayList<Regra>() ;
		Regra r21 = new Regra("ATFD > 5 AND CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras21.add(r21);
		ResultDisplay rd21 = new ResultDisplay(a, regras21, records,"IF( ATFD > 5 AND CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd21.getValue(),"TRUE");
		ArrayList <Regra> regras22 = new ArrayList<Regra>() ;
		Regra r22 = new Regra("ATFD > 5 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras22.add(r22);
		ResultDisplay rd22 = new ResultDisplay(a, regras22, records,"IF( ATFD > 5 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd22.getValue(),"FALSE");
		ArrayList <Regra> regras23 = new ArrayList<Regra>() ;
		Regra r23 = new Regra("ATFD < 5 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras23.add(r23);
		ResultDisplay rd23 = new ResultDisplay(a, regras23, records,"IF( ATFD < 5 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd23.getValue(),"FALSE");
		ArrayList <Regra> regras24 = new ArrayList<Regra>() ;
		Regra r24 = new Regra("ATFD < 5 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras24.add(r24);
		ResultDisplay rd24 = new ResultDisplay(a, regras24, records,"IF( ATFD < 5 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd24.getValue(),"FALSE");
		ArrayList <Regra> regras25 = new ArrayList<Regra>() ;
		Regra r25 = new Regra("LOC > 5 AND LAA > 0","is_long_method = FALSE","is_long_method = TRUE");
		regras25.add(r25);
		ResultDisplay rd25 = new ResultDisplay(a, regras25, records,"IF( LOC > 5 AND LAA > 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd25.getValue(),"TRUE");
		ArrayList <Regra> regras26 = new ArrayList<Regra>() ;
		Regra r26 = new Regra("LOC < 5 AND CYCLO > 0","is_long_method = FALSE","is_long_method = TRUE");
		regras26.add(r26);
		ResultDisplay rd26 = new ResultDisplay(a, regras26, records,"IF( LOC < 5 AND CYCLO > 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd26.getValue(),"TRUE");
		ArrayList <Regra> regras27 = new ArrayList<Regra>() ;
		Regra r27 = new Regra("LOC < 5 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras27.add(r27);
		ResultDisplay rd27 = new ResultDisplay(a, regras27, records,"IF( LOC < 5 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd27.getValue(),"FALSE");
		ArrayList <Regra> regras28 = new ArrayList<Regra>() ;
		Regra r28 = new Regra("LOC > 5 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras28.add(r28);
		ResultDisplay rd28 = new ResultDisplay(a, regras28, records,"IF( LOC > 5 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd28.getValue(),"FALSE");
		ArrayList <Regra> regras29 = new ArrayList<Regra>() ;
		Regra r29 = new Regra("LOC > 5 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras29.add(r29);
		ResultDisplay rd29 = new ResultDisplay(a, regras29, records,"IF( LOC > 5 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd29.getValue(),"FALSE");

		ArrayList <Regra> regras30 = new ArrayList<Regra>() ;
		Regra r30 = new Regra("LAA > 5 AND LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras30.add(r30);
		ResultDisplay rd30 = new ResultDisplay(a, regras30, records,"IF( LAA > 5 OR LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd30.getValue(),"TRUE");
		ArrayList <Regra> regras31 = new ArrayList<Regra>() ;
		Regra r31 = new Regra("LAA > 5 OR CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras31.add(r31);
		ResultDisplay rd31 = new ResultDisplay(a, regras31, records,"IF( LAA > 5 OR CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd31.getValue(),"TRUE");
		ArrayList <Regra> regras32 = new ArrayList<Regra>() ;
		Regra r32 = new Regra("LAA > 5 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras32.add(r32);
		ResultDisplay rd32 = new ResultDisplay(a, regras32, records,"IF( LAA > 5 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd32.getValue(),"FALSE");
		ArrayList <Regra> regras33 = new ArrayList<Regra>() ;
		Regra r33 = new Regra("LAA > 5 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras33.add(r33);
		ResultDisplay rd33 = new ResultDisplay(a, regras33, records,"IF( LAA > 5 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd33.getValue(),"FALSE");
		ArrayList <Regra> regras34 = new ArrayList<Regra>() ;
		Regra r34 = new Regra("CYCLO > 5 OR LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras15.add(r34);
		ResultDisplay rd34 = new ResultDisplay(a, regras34, records,"IF( CYCLO > 5 OR LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd34.getValue(),"TRUE");
		ArrayList <Regra> regras35 = new ArrayList<Regra>() ;
		Regra r35 = new Regra("CYCLO > 5 OR CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras35.add(r35);
		ResultDisplay rd35 = new ResultDisplay(a, regras35, records,"IF( CYCLO > 5 OR CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd35.getValue(),"TRUE");
		ArrayList <Regra> regras36 = new ArrayList<Regra>() ;
		Regra r36 = new Regra("CYCLO > 5 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras36.add(r36);
		ResultDisplay rd36 = new ResultDisplay(a, regras36, records,"IF( CYCLO > 5 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd36.getValue(),"FALSE");
		ArrayList <Regra> regras37 = new ArrayList<Regra>() ;
		Regra r37 = new Regra("CYCLO > 5 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras37.add(r37);
		ResultDisplay rd37 = new ResultDisplay(a, regras37, records,"IF( CYCLO > 5 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd37.getValue(),"FALSE");
		ArrayList <Regra> regras38 = new ArrayList<Regra>() ;
		Regra r38 = new Regra("CYCLO < 5 OR LOC < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras19.add(r38);
		ResultDisplay rd38 = new ResultDisplay(a, regras38, records,"IF( CYCLO < 5 OR LOC < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd38.getValue(),"FALSE");
		ArrayList <Regra> regras39 = new ArrayList<Regra>() ;
		Regra r39 = new Regra("ATFD < 5 OR LAA < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras39.add(r39);
		ResultDisplay rd39 = new ResultDisplay(a, regras39, records,"IF( ATFD < 5 OR LAA < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd39.getValue(),"TRUE");
		ArrayList <Regra> regras40 = new ArrayList<Regra>() ;
		Regra r40 = new Regra("ATFD > 5 OR CYCLO < 0","is_long_method = FALSE","is_long_method = TRUE");
		regras40.add(r40);
		ResultDisplay rd40 = new ResultDisplay(a, regras40, records,"IF( ATFD > 5 OR CYCLO < 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertEquals(rd40.getValue(),"TRUE");
		ArrayList <Regra> regras41 = new ArrayList<Regra>() ;
		Regra r41 = new Regra("ATFD > 5 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras41.add(r41);
		ResultDisplay rd41 = new ResultDisplay(a, regras41, records,"IF( ATFD > 5 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd41.getValue(),"FALSE");
		ArrayList <Regra> regras42 = new ArrayList<Regra>() ;
		Regra r42 = new Regra("ATFD < 5 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras42.add(r42);
		ResultDisplay rd42 = new ResultDisplay(a, regras42, records,"IF( ATFD < 5 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd42.getValue(),"FALSE");
		ArrayList <Regra> regras43 = new ArrayList<Regra>() ;
		Regra r43 = new Regra("ATFD < 5 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras43.add(r43);
		ResultDisplay rd43 = new ResultDisplay(a, regras43, records,"IF( ATFD < 5 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd43.getValue(),"FALSE");
		ArrayList <Regra> regras44 = new ArrayList<Regra>() ;
		Regra r44 = new Regra("LOC > 5 OR LAA > 0","is_long_method = FALSE","is_long_method = TRUE");
		regras44.add(r44);
		ResultDisplay rd44 = new ResultDisplay(a, regras44, records,"IF( LOC > 5 OR LAA > 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd44.getValue(),"TRUE");
		ArrayList <Regra> regras45 = new ArrayList<Regra>() ;
		Regra r45 = new Regra("LOC < 5 OR CYCLO > 0","is_long_method = FALSE","is_long_method = TRUE");
		regras45.add(r45);
		ResultDisplay rd45 = new ResultDisplay(a, regras45, records,"IF( LOC < 5 OR CYCLO > 0 ) THEN ( is_long_method = FALSE ) ELSE ( is_long_method = TRUE )");
		assertNotEquals(rd45.getValue(),"TRUE");
		ArrayList <Regra> regras46 = new ArrayList<Regra>() ;
		Regra r46 = new Regra("LOC < 5 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras46.add(r46);
		ResultDisplay rd46 = new ResultDisplay(a, regras46, records,"IF( LOC < 5 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd46.getValue(),"FALSE");
		ArrayList <Regra> regras47 = new ArrayList<Regra>() ;
		Regra r47 = new Regra("LOC > 5 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras47.add(r47);
		ResultDisplay rd47 = new ResultDisplay(a, regras47, records,"IF( LOC > 5 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd47.getValue(),"FALSE");
		ArrayList <Regra> regras48 = new ArrayList<Regra>() ;
		Regra r48 = new Regra("LOC > 5 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras48.add(r48);
		ResultDisplay rd48 = new ResultDisplay(a, regras48, records,"IF( LOC > 5 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd48.getValue(),"FALSE");
		ArrayList <Regra> regras49 = new ArrayList<Regra>() ;
		Regra r49 = new Regra("LAA < 5000 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras49.add(r49);
		ResultDisplay rd49 = new ResultDisplay(a, regras49, records,"IF( LAA < 5000 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd49.getValue(),"FALSE");		
		ArrayList <Regra> regras50 = new ArrayList<Regra>() ;
		Regra r50 = new Regra("LAA < 0 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras50.add(r50);
		ResultDisplay rd50 = new ResultDisplay(a, regras50, records,"IF( LAA < 0 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd50.getValue(),"FALSE");
		ArrayList <Regra> regras51 = new ArrayList<Regra>() ;
		Regra r51 = new Regra("LAA < 0 OR LAA > 5555","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras51.add(r51);
		ResultDisplay rd51 = new ResultDisplay(a, regras51, records,"IF( LAA < 0 OR LAA > 5555 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd51.getValue(),"FALSE");		
		ArrayList <Regra> regras52 = new ArrayList<Regra>() ;
		Regra r52 = new Regra("LAA < 0 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras52.add(r52);
		ResultDisplay rd52 = new ResultDisplay(a, regras52, records,"IF( LAA < 0 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd52.getValue(),"FALSE");
		ArrayList <Regra> regras53 = new ArrayList<Regra>() ;
		Regra r53 = new Regra("LAA < 5000 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras53.add(r53);
		ResultDisplay rd53 = new ResultDisplay(a, regras53, records,"IF( LAA < 5000 OR LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd53.getValue(),"FALSE");	
		ArrayList <Regra> regras54 = new ArrayList<Regra>() ;
		Regra r54 = new Regra("LAA > 0 OR LAA < 5000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras54.add(r54);
		ResultDisplay rd54 = new ResultDisplay(a, regras54, records,"IF( LAA > 0 OR LAA < 5000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd54.getValue(),"FALSE");
		ArrayList <Regra> regras55 = new ArrayList<Regra>() ;
		Regra r55 = new Regra("LAA > 5000 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras55.add(r55);
		ResultDisplay rd55 = new ResultDisplay(a, regras55, records,"IF( LAA > 5000 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		assertNotEquals(rd55.getValue(),"FALSE");
		ArrayList <Regra> regras56 = new ArrayList<Regra>() ;
		Regra r56 = new Regra("LAA > 5000 OR LAA > 6000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras56.add(r56);
		ResultDisplay rd56 = new ResultDisplay(a, regras56, records,"IF( LAA > 5000 OR LAA > 6000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras57 = new ArrayList<Regra>() ;
		Regra r57 = new Regra("LAA > 5000 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras57.add(r57);
		ResultDisplay rd57 = new ResultDisplay(a, regras57, records,"IF( LAA > 5000 OR LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras58 = new ArrayList<Regra>() ;
		Regra r58 = new Regra("LAA < 0 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras58.add(r58);
		ResultDisplay rd58 = new ResultDisplay(a, regras58, records,"IF( LAA < 0 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras59 = new ArrayList<Regra>() ;
		Regra r59 = new Regra("LAA < 5500 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras59.add(r59);
		ResultDisplay rd59 = new ResultDisplay(a, regras59, records,"IF( LAA < 5500 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras60 = new ArrayList<Regra>() ;
		Regra r60 = new Regra("LAA < 0 OR LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras60.add(r60);
		ResultDisplay rd60 = new ResultDisplay(a, regras60, records,"IF( LAA < 0 OR LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras61 = new ArrayList<Regra>() ;
		Regra r61 = new Regra("LAA < 66000 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras61.add(r61);
		ResultDisplay rd61 = new ResultDisplay(a, regras61, records,"IF( LAA < 66000 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras62 = new ArrayList<Regra>() ;
		Regra r62 = new Regra("LAA > 66000 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras62.add(r62);
		ResultDisplay rd62 = new ResultDisplay(a, regras62, records,"IF( LAA > 66000 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras63 = new ArrayList<Regra>() ;
		Regra r63 = new Regra("LAA > 0 OR LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras63.add(r63);
		ResultDisplay rd63 = new ResultDisplay(a, regras63, records,"IF( LAA > 0 OR LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras64 = new ArrayList<Regra>() ;
		Regra r64 = new Regra("LAA > 5500 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras64.add(r64);
		ResultDisplay rd64 = new ResultDisplay(a, regras64, records,"IF( LAA > 5500 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras65 = new ArrayList<Regra>() ;
		Regra r65 = new Regra("LAA > 0 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras65.add(r65);
		ResultDisplay rd65 = new ResultDisplay(a, regras65, records,"IF( LAA > 0 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras66 = new ArrayList<Regra>() ;
		Regra r66 = new Regra("LAA < 0 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras66.add(r66);
		ResultDisplay rd66 = new ResultDisplay(a, regras66, records,"IF( LAA < 0 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras67 = new ArrayList<Regra>() ;
		Regra r67 = new Regra("LAA < 5500 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras67.add(r67);
		ResultDisplay rd67 = new ResultDisplay(a, regras67, records,"IF( LAA < 5500 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras68 = new ArrayList<Regra>() ;
		Regra r68 = new Regra("LAA < 0 OR CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras68.add(r68);
		ResultDisplay rd68 = new ResultDisplay(a, regras68, records,"IF( LAA < 0 OR CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras69 = new ArrayList<Regra>() ;
		Regra r69 = new Regra("LAA < 66000 OR CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras69.add(r69);
		ResultDisplay rd69 = new ResultDisplay(a, regras69, records,"IF( LAA < 66000 OR CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras70 = new ArrayList<Regra>() ;
		Regra r70 = new Regra("LAA > 66000 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras70.add(r70);
		ResultDisplay rd70 = new ResultDisplay(a, regras70, records,"IF( LAA > 66000 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras71 = new ArrayList<Regra>() ;
		Regra r71 = new Regra("LAA > 0 OR CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras71.add(r71);
		ResultDisplay rd71 = new ResultDisplay(a, regras71, records,"IF( LAA > 0 OR CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras72 = new ArrayList<Regra>() ;
		Regra r72 = new Regra("LAA > 5500 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras72.add(r72);
		ResultDisplay rd72 = new ResultDisplay(a, regras72, records,"IF( LAA > 5500 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras73 = new ArrayList<Regra>() ;
		Regra r73 = new Regra("LAA > 0 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras73.add(r73);
		ResultDisplay rd73 = new ResultDisplay(a, regras73, records,"IF( LAA > 0 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras74 = new ArrayList<Regra>() ;
		Regra r74 = new Regra("LAA < 0 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras74.add(r74);
		ResultDisplay rd74 = new ResultDisplay(a, regras74, records,"IF( LAA < 0 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras75 = new ArrayList<Regra>() ;
		Regra r75 = new Regra("LAA < 5500 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras75.add(r75);
		ResultDisplay rd75 = new ResultDisplay(a, regras75, records,"IF( LAA < 5500 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras76 = new ArrayList<Regra>() ;
		Regra r76 = new Regra("LAA < 0 OR ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras76.add(r76);
		ResultDisplay rd76 = new ResultDisplay(a, regras76, records,"IF( LAA < 0 OR ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras77 = new ArrayList<Regra>() ;
		Regra r77 = new Regra("LAA < 66000 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras77.add(r77);
		ResultDisplay rd77 = new ResultDisplay(a, regras77, records,"IF( LAA < 66000 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras78 = new ArrayList<Regra>() ;
		Regra r78 = new Regra("LAA > 66000 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras78.add(r78);
		ResultDisplay rd78 = new ResultDisplay(a, regras78, records,"IF( LAA > 66000 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras79 = new ArrayList<Regra>() ;
		Regra r79 = new Regra("LAA > 0 OR ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras79.add(r79);
		ResultDisplay rd79 = new ResultDisplay(a, regras79, records,"IF( LAA > 0 OR ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras80 = new ArrayList<Regra>() ;
		Regra r80 = new Regra("LAA > 5500 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras80.add(r80);
		ResultDisplay rd80 = new ResultDisplay(a, regras80, records,"IF( LAA > 5500 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras81 = new ArrayList<Regra>() ;
		Regra r81 = new Regra("LAA > 0 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras81.add(r81);
		ResultDisplay rd81 = new ResultDisplay(a, regras81, records,"IF( LAA > 0 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras82 = new ArrayList<Regra>() ;
		Regra r82 = new Regra("LOC < 0 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras82.add(r82);
		ResultDisplay rd82 = new ResultDisplay(a, regras82, records,"IF( LOC < 0 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras83 = new ArrayList<Regra>() ;
		Regra r83 = new Regra("LOC < 5500 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras83.add(r83);
		ResultDisplay rd83 = new ResultDisplay(a, regras83, records,"IF( LOC < 5500 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras84 = new ArrayList<Regra>() ;
		Regra r84 = new Regra("LOC < 0 OR LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras84.add(r84);
		ResultDisplay rd84 = new ResultDisplay(a, regras84, records,"IF( LOC < 0 OR LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras85 = new ArrayList<Regra>() ;
		Regra r85 = new Regra("LOC < 66000 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras85.add(r85);
		ResultDisplay rd85 = new ResultDisplay(a, regras85, records,"IF( LOC < 66000 OR LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras86 = new ArrayList<Regra>() ;
		Regra r86 = new Regra("LOC > 66000 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras86.add(r86);
		ResultDisplay rd86 = new ResultDisplay(a, regras86, records,"IF( LOC > 66000 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras87 = new ArrayList<Regra>() ;
		Regra r87 = new Regra("LOC > 0 OR LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras87.add(r87);
		ResultDisplay rd87 = new ResultDisplay(a, regras87, records,"IF( LOC > 0 OR LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras88 = new ArrayList<Regra>() ;
		Regra r88 = new Regra("LOC > 5500 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras88.add(r88);
		ResultDisplay rd88 = new ResultDisplay(a, regras88, records,"IF( LOC > 5500 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras89 = new ArrayList<Regra>() ;
		Regra r89 = new Regra("LOC > 0 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras89.add(r89);
		ResultDisplay rd89 = new ResultDisplay(a, regras89, records,"IF( LOC > 0 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras90 = new ArrayList<Regra>() ;
		Regra r90 = new Regra("LOC < 0 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras90.add(r90);
		ResultDisplay rd90 = new ResultDisplay(a, regras90, records,"IF( LOC < 0 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras91 = new ArrayList<Regra>() ;
		Regra r91 = new Regra("LOC < 5500 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras91.add(r91);
		ResultDisplay rd91 = new ResultDisplay(a, regras91, records,"IF( LOC < 5500 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras92 = new ArrayList<Regra>() ;
		Regra r92 = new Regra("LOC < 0 OR LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras92.add(r92);
		ResultDisplay rd92 = new ResultDisplay(a, regras92, records,"IF( LOC < 0 OR LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras93 = new ArrayList<Regra>() ;
		Regra r93 = new Regra("LOC < 66000 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras93.add(r93);
		ResultDisplay rd93 = new ResultDisplay(a, regras93, records,"IF( LOC < 66000 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras94 = new ArrayList<Regra>() ;
		Regra r94 = new Regra("LOC > 66000 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras94.add(r94);
		ResultDisplay rd94 = new ResultDisplay(a, regras94, records,"IF( LOC > 66000 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras95 = new ArrayList<Regra>() ;
		Regra r95 = new Regra("LOC > 0 OR LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras95.add(r95);
		ResultDisplay rd95 = new ResultDisplay(a, regras95, records,"IF( LOC > 0 OR LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras96 = new ArrayList<Regra>() ;
		Regra r96 = new Regra("LOC > 5500 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras96.add(r96);
		ResultDisplay rd96 = new ResultDisplay(a, regras96, records,"IF( LOC > 5500 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras97 = new ArrayList<Regra>() ;
		Regra r97 = new Regra("LOC > 0 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras97.add(r97);
		ResultDisplay rd97 = new ResultDisplay(a, regras97, records,"IF( LOC > 0 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras98 = new ArrayList<Regra>() ;
		Regra r98 = new Regra("LOC < 0 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras98.add(r98);
		ResultDisplay rd98 = new ResultDisplay(a, regras98, records,"IF( LOC < 0 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras99 = new ArrayList<Regra>() ;
		Regra r99 = new Regra("LOC < 5500 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras99.add(r99);
		ResultDisplay rd99 = new ResultDisplay(a, regras99, records,"IF( LOC < 5500 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras100 = new ArrayList<Regra>() ;
		Regra r100 = new Regra("LOC < 0 OR CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras100.add(r100);
		ResultDisplay rd100 = new ResultDisplay(a, regras100, records,"IF( LOC < 0 OR CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras101 = new ArrayList<Regra>() ;
		Regra r101 = new Regra("LOC < 66000 OR CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras101.add(r101);
		ResultDisplay rd101 = new ResultDisplay(a, regras101, records,"IF( LOC < 66000 OR CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras102 = new ArrayList<Regra>() ;
		Regra r102 = new Regra("LOC > 66000 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras102.add(r102);
		ResultDisplay rd102 = new ResultDisplay(a, regras102, records,"IF( LOC > 66000 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras103 = new ArrayList<Regra>() ;
		Regra r103 = new Regra("LOC > 0 OR CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras103.add(r103);
		ResultDisplay rd103 = new ResultDisplay(a, regras103, records,"IF( LOC > 0 OR CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras104 = new ArrayList<Regra>() ;
		Regra r104 = new Regra("LOC > 5500 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras104.add(r104);
		ResultDisplay rd104 = new ResultDisplay(a, regras104, records,"IF( LOC > 5500 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras105 = new ArrayList<Regra>() ;
		Regra r105 = new Regra("LOC > 0 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras105.add(r105);
		ResultDisplay rd105 = new ResultDisplay(a, regras105, records,"IF( LOC > 0 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras106 = new ArrayList<Regra>() ;
		Regra r106 = new Regra("LOC < 0 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras106.add(r106);
		ResultDisplay rd106 = new ResultDisplay(a, regras106, records,"IF( LOC < 0 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras107 = new ArrayList<Regra>() ;
		Regra r107 = new Regra("LOC < 5500 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras107.add(r107);
		ResultDisplay rd107 = new ResultDisplay(a, regras107, records,"IF( LOC < 5500 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras108 = new ArrayList<Regra>() ;
		Regra r108 = new Regra("LOC < 0 OR ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras108.add(r108);
		ResultDisplay rd108 = new ResultDisplay(a, regras108, records,"IF( LOC < 0 OR ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras109 = new ArrayList<Regra>() ;
		Regra r109 = new Regra("LOC < 66000 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras109.add(r109);
		ResultDisplay rd109 = new ResultDisplay(a, regras109, records,"IF( LOC < 66000 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras110 = new ArrayList<Regra>() ;
		Regra r110 = new Regra("LOC > 66000 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras110.add(r110);
		ResultDisplay rd110 = new ResultDisplay(a, regras110, records,"IF( LOC > 66000 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras111 = new ArrayList<Regra>() ;
		Regra r111 = new Regra("LOC > 0 OR ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras111.add(r111);
		ResultDisplay rd111 = new ResultDisplay(a, regras111, records,"IF( LOC > 0 OR ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras112 = new ArrayList<Regra>() ;
		Regra r112 = new Regra("LOC > 5500 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras112.add(r112);
		ResultDisplay rd112 = new ResultDisplay(a, regras112, records,"IF( LOC > 5500 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras113 = new ArrayList<Regra>() ;
		Regra r113 = new Regra("LOC > 0 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras113.add(r113);
		ResultDisplay rd113 = new ResultDisplay(a, regras113, records,"IF( LOC > 0 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras114 = new ArrayList<Regra>() ;
		Regra r114 = new Regra("CYCLO < 0 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras114.add(r114);
		ResultDisplay rd114 = new ResultDisplay(a, regras114, records,"IF( CYCLO < 0 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras115 = new ArrayList<Regra>() ;
		Regra r115 = new Regra("CYCLO < 5500 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras115.add(r115);
		ResultDisplay rd115 = new ResultDisplay(a, regras115, records,"IF( CYCLO < 5500 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras116 = new ArrayList<Regra>() ;
		Regra r116 = new Regra("CYCLO < 0 OR LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras116.add(r116);
		ResultDisplay rd116 = new ResultDisplay(a, regras116, records,"IF( CYCLO < 0 OR LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras117 = new ArrayList<Regra>() ;
		Regra r117 = new Regra("CYCLO < 66000 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras117.add(r117);
		ResultDisplay rd117 = new ResultDisplay(a, regras117, records,"IF( CYCLO < 66000 OR LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras118 = new ArrayList<Regra>() ;
		Regra r118 = new Regra("CYCLO > 66000 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras118.add(r118);
		ResultDisplay rd118 = new ResultDisplay(a, regras118, records,"IF( CYCLO > 66000 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras119 = new ArrayList<Regra>() ;
		Regra r119 = new Regra("CYCLO > 0 OR LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras119.add(r119);
		ResultDisplay rd119 = new ResultDisplay(a, regras119, records,"IF( CYCLO > 0 OR LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras120 = new ArrayList<Regra>() ;
		Regra r120 = new Regra("CYCLO > 5500 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras120.add(r120);
		ResultDisplay rd120 = new ResultDisplay(a, regras120, records,"IF( CYCLO > 5500 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras121 = new ArrayList<Regra>() ;
		Regra r121 = new Regra("CYCLO > 0 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras121.add(r121);
		ResultDisplay rd121 = new ResultDisplay(a, regras121, records,"IF( CYCLO > 0 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras122 = new ArrayList<Regra>() ;
		Regra r122 = new Regra("CYCLO < 0 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras122.add(r122);
		ResultDisplay rd122 = new ResultDisplay(a, regras122, records,"IF( CYCLO < 0 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras123 = new ArrayList<Regra>() ;
		Regra r123 = new Regra("CYCLO < 5500 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras123.add(r123);
		ResultDisplay rd123 = new ResultDisplay(a, regras123, records,"IF( CYCLO < 5500 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras124 = new ArrayList<Regra>() ;
		Regra r124 = new Regra("CYCLO < 0 OR LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras124.add(r124);
		ResultDisplay rd124 = new ResultDisplay(a, regras124, records,"IF( CYCLO < 0 OR LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras125 = new ArrayList<Regra>() ;
		Regra r125 = new Regra("CYCLO < 66000 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras125.add(r125);
		ResultDisplay rd125 = new ResultDisplay(a, regras125, records,"IF( CYCLO < 66000 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras126 = new ArrayList<Regra>() ;
		Regra r126 = new Regra("CYCLO > 66000 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras126.add(r126);
		ResultDisplay rd126 = new ResultDisplay(a, regras126, records,"IF( CYCLO > 66000 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras127 = new ArrayList<Regra>() ;
		Regra r127 = new Regra("CYCLO > 0 OR LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras127.add(r127);
		ResultDisplay rd127 = new ResultDisplay(a, regras127, records,"IF( CYCLO > 0 OR LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras128 = new ArrayList<Regra>() ;
		Regra r128 = new Regra("CYCLO > 5500 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras128.add(r128);
		ResultDisplay rd128 = new ResultDisplay(a, regras128, records,"IF( CYCLO > 5500 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras129 = new ArrayList<Regra>() ;
		Regra r129 = new Regra("CYCLO > 0 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras129.add(r129);
		ResultDisplay rd129 = new ResultDisplay(a, regras129, records,"IF( CYCLO > 0 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras130 = new ArrayList<Regra>() ;
		Regra r130 = new Regra("CYCLO < 0 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras130.add(r130);
		ResultDisplay rd130 = new ResultDisplay(a, regras130, records,"IF( CYCLO < 0 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras131 = new ArrayList<Regra>() ;
		Regra r131 = new Regra("CYCLO < 5500 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras131.add(r131);
		ResultDisplay rd131 = new ResultDisplay(a, regras131, records,"IF( CYCLO < 5500 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras132 = new ArrayList<Regra>() ;
		Regra r132 = new Regra("CYCLO < 0 OR CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras132.add(r132);
		ResultDisplay rd132 = new ResultDisplay(a, regras132, records,"IF( CYCLO < 0 OR CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras133 = new ArrayList<Regra>() ;
		Regra r133 = new Regra("CYCLO < 66000 OR CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras133.add(r133);
		ResultDisplay rd133 = new ResultDisplay(a, regras133, records,"IF( CYCLO < 66000 OR CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras134 = new ArrayList<Regra>() ;
		Regra r134 = new Regra("CYCLO > 66000 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras134.add(r134);
		ResultDisplay rd134 = new ResultDisplay(a, regras134, records,"IF( CYCLO > 66000 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras135 = new ArrayList<Regra>() ;
		Regra r135 = new Regra("CYCLO > 0 OR CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras135.add(r135);
		ResultDisplay rd135 = new ResultDisplay(a, regras135, records,"IF( CYCLO > 0 OR CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras136 = new ArrayList<Regra>() ;
		Regra r136 = new Regra("CYCLO > 5500 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras136.add(r136);
		ResultDisplay rd136 = new ResultDisplay(a, regras136, records,"IF( CYCLO > 5500 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras137 = new ArrayList<Regra>() ;
		Regra r137 = new Regra("CYCLO > 0 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras137.add(r137);
		ResultDisplay rd137 = new ResultDisplay(a, regras137, records,"IF( CYCLO > 0 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras138 = new ArrayList<Regra>() ;
		Regra r138 = new Regra("CYCLO < 0 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras138.add(r138);
		ResultDisplay rd138 = new ResultDisplay(a, regras138, records,"IF( CYCLO < 0 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras139 = new ArrayList<Regra>() ;
		Regra r139 = new Regra("CYCLO < 5500 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras139.add(r139);
		ResultDisplay rd139 = new ResultDisplay(a, regras139, records,"IF( CYCLO < 5500 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras140 = new ArrayList<Regra>() ;
		Regra r140 = new Regra("CYCLO < 0 OR ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras140.add(r140);
		ResultDisplay rd140 = new ResultDisplay(a, regras140, records,"IF( CYCLO < 0 OR ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras141 = new ArrayList<Regra>() ;
		Regra r141 = new Regra("CYCLO < 66000 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras141.add(r141);
		ResultDisplay rd141 = new ResultDisplay(a, regras141, records,"IF( CYCLO < 66000 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras142 = new ArrayList<Regra>() ;
		Regra r142 = new Regra("CYCLO > 66000 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras142.add(r142);
		ResultDisplay rd142 = new ResultDisplay(a, regras142, records,"IF( CYCLO > 66000 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras143 = new ArrayList<Regra>() ;
		Regra r143 = new Regra("CYCLO > 0 OR ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras143.add(r143);
		ResultDisplay rd143 = new ResultDisplay(a, regras143, records,"IF( CYCLO > 0 OR ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras144 = new ArrayList<Regra>() ;
		Regra r144 = new Regra("CYCLO > 5500 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras144.add(r144);
		ResultDisplay rd144 = new ResultDisplay(a, regras144, records,"IF( CYCLO > 5500 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras145 = new ArrayList<Regra>() ;
		Regra r145 = new Regra("CYCLO > 0 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras145.add(r145);
		ResultDisplay rd145 = new ResultDisplay(a, regras145, records,"IF( CYCLO > 0 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras146 = new ArrayList<Regra>() ;
		Regra r146 = new Regra("ATFD < 0 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras146.add(r146);
		ResultDisplay rd146 = new ResultDisplay(a, regras146, records,"IF( ATFD < 0 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras147 = new ArrayList<Regra>() ;
		Regra r147 = new Regra("ATFD < 5500 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras147.add(r147);
		ResultDisplay rd147 = new ResultDisplay(a, regras147, records,"IF( ATFD < 5500 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras148 = new ArrayList<Regra>() ;
		Regra r148 = new Regra("ATFD < 0 OR LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras148.add(r148);
		ResultDisplay rd148 = new ResultDisplay(a, regras148, records,"IF( ATFD < 0 OR LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras149 = new ArrayList<Regra>() ;
		Regra r149 = new Regra("ATFD < 66000 OR LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras149.add(r149);
		ResultDisplay rd149 = new ResultDisplay(a, regras149, records,"IF( ATFD < 66000 OR LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras150 = new ArrayList<Regra>() ;
		Regra r150 = new Regra("ATFD > 66000 OR LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras150.add(r150);
		ResultDisplay rd150 = new ResultDisplay(a, regras150, records,"IF( ATFD > 66000 OR LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras151 = new ArrayList<Regra>() ;
		Regra r151 = new Regra("ATFD > 0 OR LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras151.add(r151);
		ResultDisplay rd151 = new ResultDisplay(a, regras151, records,"IF( ATFD > 0 OR LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras152 = new ArrayList<Regra>() ;
		Regra r152 = new Regra("ATFD > 5500 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras152.add(r152);
		ResultDisplay rd152 = new ResultDisplay(a, regras152, records,"IF( ATFD > 5500 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras153 = new ArrayList<Regra>() ;
		Regra r153 = new Regra("ATFD > 0 OR LAA > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras153.add(r153);
		ResultDisplay rd153 = new ResultDisplay(a, regras153, records,"IF( ATFD > 0 OR LAA > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras154 = new ArrayList<Regra>() ;
		Regra r154 = new Regra("ATFD < 0 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras154.add(r154);
		ResultDisplay rd154 = new ResultDisplay(a, regras154, records,"IF( ATFD < 0 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras155 = new ArrayList<Regra>() ;
		Regra r155 = new Regra("ATFD < 5500 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras155.add(r155);
		ResultDisplay rd155 = new ResultDisplay(a, regras155, records,"IF( ATFD < 5500 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras156 = new ArrayList<Regra>() ;
		Regra r156 = new Regra("ATFD < 0 OR LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras156.add(r156);
		ResultDisplay rd156 = new ResultDisplay(a, regras156, records,"IF( ATFD < 0 OR LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras157 = new ArrayList<Regra>() ;
		Regra r157 = new Regra("ATFD < 66000 OR LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras157.add(r157);
		ResultDisplay rd157 = new ResultDisplay(a, regras157, records,"IF( ATFD < 66000 OR LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras158 = new ArrayList<Regra>() ;
		Regra r158 = new Regra("ATFD > 66000 OR LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras158.add(r158);
		ResultDisplay rd158 = new ResultDisplay(a, regras158, records,"IF( ATFD > 66000 OR LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras159 = new ArrayList<Regra>() ;
		Regra r159 = new Regra("ATFD > 0 OR LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras159.add(r159);
		ResultDisplay rd159 = new ResultDisplay(a, regras159, records,"IF( ATFD > 0 OR LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras160 = new ArrayList<Regra>() ;
		Regra r160 = new Regra("ATFD > 5500 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras160.add(r160);
		ResultDisplay rd160 = new ResultDisplay(a, regras160, records,"IF( ATFD > 5500 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras161 = new ArrayList<Regra>() ;
		Regra r161 = new Regra("ATFD > 0 OR LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras161.add(r161);
		ResultDisplay rd161 = new ResultDisplay(a, regras161, records,"IF( ATFD > 0 OR LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras162 = new ArrayList<Regra>() ;
		Regra r162 = new Regra("ATFD < 0 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras162.add(r162);
		ResultDisplay rd162 = new ResultDisplay(a, regras162, records,"IF( ATFD < 0 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras163 = new ArrayList<Regra>() ;
		Regra r163 = new Regra("ATFD < 5500 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras163.add(r163);
		ResultDisplay rd163 = new ResultDisplay(a, regras163, records,"IF( ATFD < 5500 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras164 = new ArrayList<Regra>() ;
		Regra r164 = new Regra("ATFD < 0 OR CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras164.add(r164);
		ResultDisplay rd164 = new ResultDisplay(a, regras164, records,"IF( ATFD < 0 OR CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras165 = new ArrayList<Regra>() ;
		Regra r165 = new Regra("ATFD < 66000 OR CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras165.add(r165);
		ResultDisplay rd165 = new ResultDisplay(a, regras165, records,"IF( ATFD < 66000 OR CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras166 = new ArrayList<Regra>() ;
		Regra r166 = new Regra("ATFD > 66000 OR CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras166.add(r166);
		ResultDisplay rd166 = new ResultDisplay(a, regras166, records,"IF( ATFD > 66000 OR CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras167 = new ArrayList<Regra>() ;
		Regra r167 = new Regra("ATFD > 0 OR CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras167.add(r167);
		ResultDisplay rd167 = new ResultDisplay(a, regras167, records,"IF( ATFD > 0 OR CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras168 = new ArrayList<Regra>() ;
		Regra r168 = new Regra("ATFD > 15000 OR CYCLO > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras168.add(r168);
		ResultDisplay rd168 = new ResultDisplay(a, regras168, records,"IF( ATFD > 15000 OR CYCLO > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras169 = new ArrayList<Regra>() ;
		Regra r169 = new Regra("ATFD > 0 OR CYCLO > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras169.add(r169);
		ResultDisplay rd169 = new ResultDisplay(a, regras169, records,"IF( ATFD > 0 OR CYCLO > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras170 = new ArrayList<Regra>() ;
		Regra r170 = new Regra("ATFD < 0 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras170.add(r170);
		ResultDisplay rd170 = new ResultDisplay(a, regras170, records,"IF( ATFD < 0 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras171 = new ArrayList<Regra>() ;
		Regra r171 = new Regra("ATFD < 5500 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras171.add(r171);
		ResultDisplay rd171 = new ResultDisplay(a, regras171, records,"IF( ATFD < 5500 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras172 = new ArrayList<Regra>() ;
		Regra r172 = new Regra("ATFD < 0 OR ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras172.add(r172);
		ResultDisplay rd172 = new ResultDisplay(a, regras172, records,"IF( ATFD < 0 OR ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras173 = new ArrayList<Regra>() ;
		Regra r173 = new Regra("ATFD < 66000 OR ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras173.add(r173);
		ResultDisplay rd173 = new ResultDisplay(a, regras173, records,"IF( ATFD < 66000 OR ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras174 = new ArrayList<Regra>() ;
		Regra r174 = new Regra("ATFD > 66000 OR ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras174.add(r174);
		ResultDisplay rd174 = new ResultDisplay(a, regras174, records,"IF( ATFD > 66000 OR ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras175 = new ArrayList<Regra>() ;
		Regra r175 = new Regra("ATFD > 0 OR ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras175.add(r175);
		ResultDisplay rd175 = new ResultDisplay(a, regras175, records,"IF( ATFD > 0 OR ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras176 = new ArrayList<Regra>() ;
		Regra r176 = new Regra("ATFD > 15000 OR ATFD > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras176.add(r176);
		ResultDisplay rd176 = new ResultDisplay(a, regras176, records,"IF( ATFD > 15000 OR ATFD > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras177 = new ArrayList<Regra>() ;
		Regra r177 = new Regra("ATFD > 0 OR ATFD > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras177.add(r177);
		ResultDisplay rd177 = new ResultDisplay(a, regras177, records,"IF( ATFD > 0 OR ATFD > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras178 = new ArrayList<Regra>() ;
		Regra r178 = new Regra("ATFD < 0 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras178.add(r178);
		ResultDisplay rd178 = new ResultDisplay(a, regras178, records,"IF( ATFD < 0 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras179 = new ArrayList<Regra>() ;
		Regra r179 = new Regra("ATFD < 5500 AND LOC < 10000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras179.add(r179);
		ResultDisplay rd179 = new ResultDisplay(a, regras179, records,"IF( ATFD < 5500 AND LOC < 10000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras180 = new ArrayList<Regra>() ;
		Regra r180 = new Regra("ATFD < 0 AND LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras180.add(r180);
		ResultDisplay rd180 = new ResultDisplay(a, regras180, records,"IF( ATFD < 0 AND LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras181 = new ArrayList<Regra>() ;
		Regra r181 = new Regra("ATFD < 66000 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras181.add(r181);
		ResultDisplay rd181 = new ResultDisplay(a, regras181, records,"IF( ATFD < 66000 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras182 = new ArrayList<Regra>() ;
		Regra r182 = new Regra("ATFD > 66000 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras182.add(r182);
		ResultDisplay rd182 = new ResultDisplay(a, regras182, records,"IF( ATFD > 66000 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras183 = new ArrayList<Regra>() ;
		Regra r183 = new Regra("ATFD > 0 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras183.add(r183);
		ResultDisplay rd183 = new ResultDisplay(a, regras183, records,"IF( ATFD > 0 AND LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras184 = new ArrayList<Regra>() ;
		Regra r184 = new Regra("ATFD > 5500 AND LOC > 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras184.add(r184);
		ResultDisplay rd184 = new ResultDisplay(a, regras184, records,"IF( ATFD > 5500 AND LOC > 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras185 = new ArrayList<Regra>() ;
		Regra r185 = new Regra("ATFD > 0 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras185.add(r185);
		ResultDisplay rd185 = new ResultDisplay(a, regras185, records,"IF( ATFD > 0 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras186 = new ArrayList<Regra>() ;
		Regra r186 = new Regra("ATFD < 0 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras186.add(r186);
		ResultDisplay rd186 = new ResultDisplay(a, regras186, records,"IF( ATFD < 0 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras187 = new ArrayList<Regra>() ;
		Regra r187 = new Regra("ATFD < 5500 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras187.add(r187);
		ResultDisplay rd187 = new ResultDisplay(a, regras187, records,"IF( ATFD < 5500 AND CYCLO < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras188 = new ArrayList<Regra>() ;
		Regra r188 = new Regra("ATFD < 0 AND CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras188.add(r188);
		ResultDisplay rd188 = new ResultDisplay(a, regras188, records,"IF( ATFD < 0 AND CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras189 = new ArrayList<Regra>() ;
		Regra r189 = new Regra("ATFD < 66000 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras189.add(r189);
		ResultDisplay rd189 = new ResultDisplay(a, regras189, records,"IF( ATFD < 66000 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras190 = new ArrayList<Regra>() ;
		Regra r190 = new Regra("ATFD > 66000 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras190.add(r190);
		ResultDisplay rd190 = new ResultDisplay(a, regras190, records,"IF( ATFD > 66000 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras191 = new ArrayList<Regra>() ;
		Regra r191 = new Regra("ATFD > 0 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras191.add(r191);
		ResultDisplay rd191 = new ResultDisplay(a, regras191, records,"IF( ATFD > 0 AND CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras192 = new ArrayList<Regra>() ;
		Regra r192 = new Regra("ATFD > 15000 AND CYCLO > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras192.add(r192);
		ResultDisplay rd192 = new ResultDisplay(a, regras192, records,"IF( ATFD > 15000 AND CYCLO > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras193 = new ArrayList<Regra>() ;
		Regra r193 = new Regra("ATFD > 0 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras193.add(r193);
		ResultDisplay rd193 = new ResultDisplay(a, regras193, records,"IF( ATFD > 0 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras194 = new ArrayList<Regra>() ;
		Regra r194 = new Regra("LOC < 0 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras194.add(r194);
		ResultDisplay rd194 = new ResultDisplay(a, regras194, records,"IF( LOC < 0 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras195 = new ArrayList<Regra>() ;
		Regra r195 = new Regra("LOC < 5500 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras195.add(r195);
		ResultDisplay rd195 = new ResultDisplay(a, regras195, records,"IF( LOC < 5500 AND LOC < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras196 = new ArrayList<Regra>() ;
		Regra r196 = new Regra("LOC < 0 AND LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras196.add(r196);
		ResultDisplay rd196 = new ResultDisplay(a, regras196, records,"IF( LOC < 0 AND LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras197 = new ArrayList<Regra>() ;
		Regra r197 = new Regra("LOC < 66000 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras197.add(r197);
		ResultDisplay rd197 = new ResultDisplay(a, regras197, records,"IF( LOC < 66000 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras198 = new ArrayList<Regra>() ;
		Regra r198 = new Regra("LOC > 66000 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras198.add(r198);
		ResultDisplay rd198 = new ResultDisplay(a, regras198, records,"IF( LOC > 66000 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras199 = new ArrayList<Regra>() ;
		Regra r199 = new Regra("LOC > 0 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras199.add(r199);
		ResultDisplay rd199 = new ResultDisplay(a, regras199, records,"IF( LOC > 0 AND LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras200 = new ArrayList<Regra>() ;
		Regra r200 = new Regra("LOC > 15000 AND LOC > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras200.add(r200);
		ResultDisplay rd200 = new ResultDisplay(a, regras200, records,"IF( LOC > 15000 AND LOC > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras201 = new ArrayList<Regra>() ;
		Regra r201 = new Regra("LOC > 0 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras201.add(r201);
		ResultDisplay rd201 = new ResultDisplay(a, regras201, records,"IF( LOC > 0 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras202 = new ArrayList<Regra>() ;
		Regra r202 = new Regra("LAA < 0 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras202.add(r202);
		ResultDisplay rd202 = new ResultDisplay(a, regras202, records,"IF( LAA < 0 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras203 = new ArrayList<Regra>() ;
		Regra r203 = new Regra("LAA < 5500 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras203.add(r203);
		ResultDisplay rd203 = new ResultDisplay(a, regras203, records,"IF( LAA < 5500 AND LAA < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras204 = new ArrayList<Regra>() ;
		Regra r204 = new Regra("LAA < 0 AND LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras204.add(r204);
		ResultDisplay rd204 = new ResultDisplay(a, regras204, records,"IF( LAA < 0 AND LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras205 = new ArrayList<Regra>() ;
		Regra r205 = new Regra("LAA < 66000 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras205.add(r205);
		ResultDisplay rd205 = new ResultDisplay(a, regras205, records,"IF( LAA < 66000 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras206 = new ArrayList<Regra>() ;
		Regra r206 = new Regra("LAA > 66000 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras206.add(r206);
		ResultDisplay rd206 = new ResultDisplay(a, regras206, records,"IF( LAA > 66000 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras207 = new ArrayList<Regra>() ;
		Regra r207 = new Regra("LAA > 0 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras207.add(r207);
		ResultDisplay rd207 = new ResultDisplay(a, regras207, records,"IF( LAA > 0 AND LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras208 = new ArrayList<Regra>() ;
		Regra r208 = new Regra("LAA > 15000 AND LAA > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras208.add(r208);
		ResultDisplay rd208 = new ResultDisplay(a, regras208, records,"IF( LAA > 15000 AND LAA > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras209 = new ArrayList<Regra>() ;
		Regra r209 = new Regra("LAA > 0 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras209.add(r209);
		ResultDisplay rd209 = new ResultDisplay(a, regras209, records,"IF( LAA > 0 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras210 = new ArrayList<Regra>() ;
		Regra r210 = new Regra("LAA < 0 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras210.add(r210);
		ResultDisplay rd210 = new ResultDisplay(a, regras210, records,"IF( LAA < 0 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras211 = new ArrayList<Regra>() ;
		Regra r211 = new Regra("LAA < 5500 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras211.add(r211);
		ResultDisplay rd211 = new ResultDisplay(a, regras211, records,"IF( LAA < 5500 AND LOC < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras212 = new ArrayList<Regra>() ;
		Regra r212 = new Regra("LAA < 0 AND LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras212.add(r212);
		ResultDisplay rd212 = new ResultDisplay(a, regras212, records,"IF( LAA < 0 AND LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras213 = new ArrayList<Regra>() ;
		Regra r213 = new Regra("LAA < 66000 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras213.add(r213);
		ResultDisplay rd213 = new ResultDisplay(a, regras213, records,"IF( LAA < 66000 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras214 = new ArrayList<Regra>() ;
		Regra r214 = new Regra("LAA > 66000 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras214.add(r214);
		ResultDisplay rd214 = new ResultDisplay(a, regras214, records,"IF( LAA > 66000 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras215 = new ArrayList<Regra>() ;
		Regra r215 = new Regra("LAA > 0 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras215.add(r215);
		ResultDisplay rd215 = new ResultDisplay(a, regras215, records,"IF( LAA > 0 AND LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras216 = new ArrayList<Regra>() ;
		Regra r216 = new Regra("LAA > 15000 AND LOC > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras216.add(r216);
		ResultDisplay rd216 = new ResultDisplay(a, regras216, records,"IF( LAA > 15000 AND LOC > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras217 = new ArrayList<Regra>() ;
		Regra r217 = new Regra("LAA > 0 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras217.add(r217);
		ResultDisplay rd217 = new ResultDisplay(a, regras217, records,"IF( LAA > 0 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");

		ArrayList <Regra> regras218 = new ArrayList<Regra>() ;
		Regra r218 = new Regra("LAA < 0 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras218.add(r218);
		ResultDisplay rd218 = new ResultDisplay(a, regras218, records,"IF( LAA < 0 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras219 = new ArrayList<Regra>() ;
		Regra r219 = new Regra("LAA < 5500 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras219.add(r219);
		ResultDisplay rd219 = new ResultDisplay(a, regras219, records,"IF( LAA < 5500 AND CYCLO < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras220 = new ArrayList<Regra>() ;
		Regra r220 = new Regra("LAA < 0 AND CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras220.add(r220);
		ResultDisplay rd220 = new ResultDisplay(a, regras220, records,"IF( LAA < 0 AND CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras221 = new ArrayList<Regra>() ;
		Regra r221 = new Regra("LAA < 66000 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras221.add(r221);
		ResultDisplay rd221 = new ResultDisplay(a, regras221, records,"IF( LAA < 66000 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras222 = new ArrayList<Regra>() ;
		Regra r222 = new Regra("LAA > 66000 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras222.add(r222);
		ResultDisplay rd222 = new ResultDisplay(a, regras222, records,"IF( LAA > 66000 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras223 = new ArrayList<Regra>() ;
		Regra r223 = new Regra("LAA > 0 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras223.add(r223);
		ResultDisplay rd223 = new ResultDisplay(a, regras223, records,"IF( LAA > 0 AND CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras224 = new ArrayList<Regra>() ;
		Regra r224 = new Regra("LAA > 15000 AND CYCLO > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras224.add(r224);
		ResultDisplay rd224 = new ResultDisplay(a, regras224, records,"IF( LAA > 15000 AND CYCLO > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras225 = new ArrayList<Regra>() ;
		Regra r225 = new Regra("LAA > 0 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras225.add(r225);
		ResultDisplay rd225 = new ResultDisplay(a, regras225, records,"IF( LAA > 0 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras226 = new ArrayList<Regra>() ;
		Regra r226 = new Regra("LAA < 0 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras226.add(r226);
		ResultDisplay rd226 = new ResultDisplay(a, regras226, records,"IF( LAA < 0 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras227 = new ArrayList<Regra>() ;
		Regra r227 = new Regra("LAA < 5500 AND ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras227.add(r227);
		ResultDisplay rd227 = new ResultDisplay(a, regras227, records,"IF( LAA < 5500 AND ATFD < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras228 = new ArrayList<Regra>() ;
		Regra r228 = new Regra("LAA < 0 AND ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras228.add(r228);
		ResultDisplay rd228 = new ResultDisplay(a, regras228, records,"IF( LAA < 0 AND ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras229 = new ArrayList<Regra>() ;
		Regra r229 = new Regra("LAA < 66000 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras229.add(r229);
		ResultDisplay rd229 = new ResultDisplay(a, regras229, records,"IF( LAA < 66000 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras230 = new ArrayList<Regra>() ;
		Regra r230 = new Regra("LAA > 66000 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras230.add(r230);
		ResultDisplay rd230 = new ResultDisplay(a, regras230, records,"IF( LAA > 66000 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras231 = new ArrayList<Regra>() ;
		Regra r231 = new Regra("LAA > 0 AND ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras231.add(r231);
		ResultDisplay rd231 = new ResultDisplay(a, regras231, records,"IF( LAA > 0 AND ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras232 = new ArrayList<Regra>() ;
		Regra r232 = new Regra("LAA > 15000 AND ATFD > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras232.add(r232);
		ResultDisplay rd232 = new ResultDisplay(a, regras232, records,"IF( LAA > 15000 AND ATFD > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras233 = new ArrayList<Regra>() ;
		Regra r233 = new Regra("LAA > 0 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras233.add(r233);
		ResultDisplay rd233 = new ResultDisplay(a, regras233, records,"IF( LAA > 0 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras234 = new ArrayList<Regra>() ;
		Regra r234 = new Regra("LOC < 0 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras234.add(r234);
		ResultDisplay rd234 = new ResultDisplay(a, regras234, records,"IF( LOC < 0 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras235 = new ArrayList<Regra>() ;
		Regra r235 = new Regra("LOC < 5500 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras235.add(r235);
		ResultDisplay rd235 = new ResultDisplay(a, regras235, records,"IF( LOC < 5500 AND LAA < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras236 = new ArrayList<Regra>() ;
		Regra r236 = new Regra("LOC < 0 AND LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras236.add(r236);
		ResultDisplay rd236 = new ResultDisplay(a, regras236, records,"IF( LOC < 0 AND LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras237 = new ArrayList<Regra>() ;
		Regra r237 = new Regra("LOC < 66000 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras237.add(r237);
		ResultDisplay rd237 = new ResultDisplay(a, regras237, records,"IF( LOC < 66000 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras238 = new ArrayList<Regra>() ;
		Regra r238 = new Regra("LOC > 66000 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras238.add(r238);
		ResultDisplay rd238 = new ResultDisplay(a, regras238, records,"IF( LOC > 66000 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras239 = new ArrayList<Regra>() ;
		Regra r239 = new Regra("LOC > 0 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras239.add(r239);
		ResultDisplay rd239 = new ResultDisplay(a, regras239, records,"IF( LOC > 0 AND LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras240 = new ArrayList<Regra>() ;
		Regra r240 = new Regra("LOC > 15000 AND LAA > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras240.add(r240);
		ResultDisplay rd240 = new ResultDisplay(a, regras240, records,"IF( LOC > 15000 AND LAA > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras241 = new ArrayList<Regra>() ;
		Regra r241 = new Regra("LOC > 0 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras241.add(r241);
		ResultDisplay rd241 = new ResultDisplay(a, regras241, records,"IF( LOC > 0 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras242 = new ArrayList<Regra>() ;
		Regra r242 = new Regra("LOC < 0 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras242.add(r242);
		ResultDisplay rd242 = new ResultDisplay(a, regras242, records,"IF( LOC < 0 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras243 = new ArrayList<Regra>() ;
		Regra r243 = new Regra("LOC < 5500 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras243.add(r243);
		ResultDisplay rd243 = new ResultDisplay(a, regras243, records,"IF( LOC < 5500 AND CYCLO < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras244 = new ArrayList<Regra>() ;
		Regra r244 = new Regra("LOC < 0 AND CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras244.add(r244);
		ResultDisplay rd244 = new ResultDisplay(a, regras244, records,"IF( LOC < 0 AND CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras245 = new ArrayList<Regra>() ;
		Regra r245 = new Regra("LOC < 66000 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras245.add(r245);
		ResultDisplay rd245 = new ResultDisplay(a, regras245, records,"IF( LOC < 66000 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras246 = new ArrayList<Regra>() ;
		Regra r246 = new Regra("LOC > 66000 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras246.add(r246);
		ResultDisplay rd246 = new ResultDisplay(a, regras246, records,"IF( LOC > 66000 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras247 = new ArrayList<Regra>() ;
		Regra r247 = new Regra("LOC > 0 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras247.add(r247);
		ResultDisplay rd247 = new ResultDisplay(a, regras247, records,"IF( LOC > 0 AND CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras248 = new ArrayList<Regra>() ;
		Regra r248 = new Regra("LOC > 15000 AND CYCLO > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras248.add(r248);
		ResultDisplay rd248 = new ResultDisplay(a, regras248, records,"IF( LOC > 15000 AND CYCLO > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras249 = new ArrayList<Regra>() ;
		Regra r249 = new Regra("LOC > 0 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras249.add(r249);
		ResultDisplay rd249 = new ResultDisplay(a, regras249, records,"IF( LOC > 0 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras250 = new ArrayList<Regra>() ;
		Regra r250 = new Regra("LOC < 0 AND ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras250.add(r250);
		ResultDisplay rd250 = new ResultDisplay(a, regras250, records,"IF( LOC < 0 AND ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras251 = new ArrayList<Regra>() ;
		Regra r251 = new Regra("LOC < 66000 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras251.add(r251);
		ResultDisplay rd251 = new ResultDisplay(a, regras251, records,"IF( LOC < 66000 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras252 = new ArrayList<Regra>() ;
		Regra r252 = new Regra("LOC > 66000 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras252.add(r252);
		ResultDisplay rd252 = new ResultDisplay(a, regras252, records,"IF( LOC > 66000 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras253 = new ArrayList<Regra>() ;
		Regra r253 = new Regra("LOC > 0 AND ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras253.add(r253);
		ResultDisplay rd253 = new ResultDisplay(a, regras253, records,"IF( LOC > 0 AND ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras254 = new ArrayList<Regra>() ;
		Regra r254 = new Regra("CYCLO < 0 AND LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras254.add(r254);
		ResultDisplay rd254 = new ResultDisplay(a, regras254, records,"IF( CYCLO < 0 AND LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras255 = new ArrayList<Regra>() ;
		Regra r255 = new Regra("CYCLO < 66000 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras255.add(r255);
		ResultDisplay rd255 = new ResultDisplay(a, regras255, records,"IF( CYCLO < 66000 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras256 = new ArrayList<Regra>() ;
		Regra r256 = new Regra("CYCLO > 66000 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras256.add(r256);
		ResultDisplay rd256 = new ResultDisplay(a, regras256, records,"IF( CYCLO > 66000 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras257 = new ArrayList<Regra>() ;
		Regra r257 = new Regra("CYCLO > 0 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras257.add(r257);
		ResultDisplay rd257 = new ResultDisplay(a, regras257, records,"IF( CYCLO > 0 AND LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
	
		ArrayList <Regra> regras258 = new ArrayList<Regra>() ;
		Regra r258 = new Regra("CYCLO < 0 AND LOC > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras258.add(r258);
		ResultDisplay rd258 = new ResultDisplay(a, regras258, records,"IF( CYCLO < 0 AND LOC > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras259 = new ArrayList<Regra>() ;
		Regra r259 = new Regra("CYCLO < 66000 AND LOC > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras259.add(r259);
		ResultDisplay rd259 = new ResultDisplay(a, regras259, records,"IF( CYCLO < 66000 AND LOC > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras260 = new ArrayList<Regra>() ;
		Regra r260 = new Regra("CYCLO > 66000 AND LOC < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras260.add(r260);
		ResultDisplay rd260 = new ResultDisplay(a, regras260, records,"IF( CYCLO > 66000 AND LOC < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras261 = new ArrayList<Regra>() ;
		Regra r261 = new Regra("CYCLO > 0 AND LOC < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras261.add(r261);
		ResultDisplay rd261 = new ResultDisplay(a, regras261, records,"IF( CYCLO > 0 AND LOC < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
	
		ArrayList <Regra> regras262 = new ArrayList<Regra>() ;
		Regra r262 = new Regra("CYCLO < 0 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras262.add(r262);
		ResultDisplay rd262 = new ResultDisplay(a, regras262, records,"IF( CYCLO < 0 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras263 = new ArrayList<Regra>() ;
		Regra r263 = new Regra("CYCLO < 5500 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras263.add(r263);
		ResultDisplay rd263 = new ResultDisplay(a, regras263, records,"IF( CYCLO < 5500 AND CYCLO < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras264 = new ArrayList<Regra>() ;
		Regra r264 = new Regra("CYCLO < 0 AND CYCLO > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras264.add(r264);
		ResultDisplay rd264 = new ResultDisplay(a, regras264, records,"IF( CYCLO < 0 AND CYCLO > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras265 = new ArrayList<Regra>() ;
		Regra r265 = new Regra("CYCLO < 66000 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras265.add(r265);
		ResultDisplay rd265 = new ResultDisplay(a, regras265, records,"IF( CYCLO < 66000 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras266 = new ArrayList<Regra>() ;
		Regra r266 = new Regra("CYCLO > 66000 AND CYCLO < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras266.add(r266);
		ResultDisplay rd266 = new ResultDisplay(a, regras266, records,"IF( CYCLO > 66000 AND CYCLO < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras267 = new ArrayList<Regra>() ;
		Regra r267 = new Regra("CYCLO > 0 AND CYCLO < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras267.add(r267);
		ResultDisplay rd267 = new ResultDisplay(a, regras267, records,"IF( CYCLO > 0 AND CYCLO < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras268 = new ArrayList<Regra>() ;
		Regra r268 = new Regra("CYCLO > 15000 AND CYCLO > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras268.add(r268);
		ResultDisplay rd268 = new ResultDisplay(a, regras268, records,"IF( CYCLO > 15000 AND CYCLO > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras269 = new ArrayList<Regra>() ;
		Regra r269 = new Regra("CYCLO > 0 AND CYCLO > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras269.add(r269);
		ResultDisplay rd269 = new ResultDisplay(a, regras269, records,"IF( CYCLO > 0 AND CYCLO > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras270 = new ArrayList<Regra>() ;
		Regra r270 = new Regra("CYCLO < 0 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras270.add(r270);
		ResultDisplay rd270 = new ResultDisplay(a, regras270, records,"IF( CYCLO < 0 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras271 = new ArrayList<Regra>() ;
		Regra r271 = new Regra("CYCLO < 5500 AND ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras271.add(r271);
		ResultDisplay rd271 = new ResultDisplay(a, regras271, records,"IF( CYCLO < 5500 AND ATFD < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras272 = new ArrayList<Regra>() ;
		Regra r272 = new Regra("CYCLO < 0 AND ATFD > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras272.add(r272);
		ResultDisplay rd272 = new ResultDisplay(a, regras272, records,"IF( CYCLO < 0 AND ATFD > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras273 = new ArrayList<Regra>() ;
		Regra r273 = new Regra("CYCLO < 66000 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras273.add(r273);
		ResultDisplay rd273 = new ResultDisplay(a, regras273, records,"IF( CYCLO < 66000 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras274 = new ArrayList<Regra>() ;
		Regra r274 = new Regra("CYCLO > 66000 AND ATFD < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras274.add(r274);
		ResultDisplay rd274 = new ResultDisplay(a, regras274, records,"IF( CYCLO > 66000 AND ATFD < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras275 = new ArrayList<Regra>() ;
		Regra r275 = new Regra("CYCLO > 0 AND ATFD < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras275.add(r275);
		ResultDisplay rd275 = new ResultDisplay(a, regras275, records,"IF( CYCLO > 0 AND ATFD < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras276 = new ArrayList<Regra>() ;
		Regra r276 = new Regra("CYCLO > 15000 AND ATFD > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras276.add(r276);
		ResultDisplay rd276 = new ResultDisplay(a, regras276, records,"IF( CYCLO > 15000 AND ATFD > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras277 = new ArrayList<Regra>() ;
		Regra r277 = new Regra("CYCLO > 0 AND ATFD > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras277.add(r277);
		ResultDisplay rd277 = new ResultDisplay(a, regras, records,"IF( CYCLO > 0 AND ATFD > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
		ArrayList <Regra> regras278 = new ArrayList<Regra>() ;
		Regra r278 = new Regra("ATFD < 0 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras278.add(r278);
		ResultDisplay rd278 = new ResultDisplay(a, regras278, records,"IF( ATFD < 0 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras279 = new ArrayList<Regra>() ;
		Regra r279 = new Regra("ATFD < 5500 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras279.add(r279);
		ResultDisplay rd279 = new ResultDisplay(a, regras279, records,"IF( ATFD < 5500 AND LAA < 5500 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras280 = new ArrayList<Regra>() ;
		Regra r280 = new Regra("ATFD < 0 AND LAA > 6660","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras280.add(r280);
		ResultDisplay rd280 = new ResultDisplay(a, regras280, records,"IF( ATFD < 0 AND LAA > 6660 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras281 = new ArrayList<Regra>() ;
		Regra r281 = new Regra("ATFD < 66000 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras281.add(r281);
		ResultDisplay rd281 = new ResultDisplay(a, regras281, records,"IF( ATFD < 66000 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras282 = new ArrayList<Regra>() ;
		Regra r282 = new Regra("ATFD > 66000 AND LAA < 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras282.add(r282);
		ResultDisplay rd282 = new ResultDisplay(a, regras282, records,"IF( ATFD > 66000 AND LAA < 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras283 = new ArrayList<Regra>() ;
		Regra r283 = new Regra("ATFD > 0 AND LAA < 5550","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras283.add(r283);
		ResultDisplay rd283 = new ResultDisplay(a, regras283, records,"IF( ATFD > 0 AND LAA < 5550 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras284 = new ArrayList<Regra>() ;
		Regra r284 = new Regra("ATFD > 15000 AND LAA > 15000","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras284.add(r284);
		ResultDisplay rd284 = new ResultDisplay(a, regras284, records,"IF( ATFD > 15000 AND LAA > 15000 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		ArrayList <Regra> regras285 = new ArrayList<Regra>() ;
		Regra r285 = new Regra("ATFD > 0 AND LAA > 0","is_feature_envy = FALSE","is_feature_envy = TRUE");
		regras285.add(r285);
		ResultDisplay rd285 = new ResultDisplay(a, regras, records,"IF( ATFD > 0 AND LAA > 0 ) THEN ( is_feature_envy = FALSE ) ELSE ( is_feature_envy = TRUE )");
		
	}
}
